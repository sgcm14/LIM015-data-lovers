{
/* Después de cada regla, el valor «2» significa que hay una violación es un "error". 
    Si el valor puesto es «1» generaría un "warn" y un valor de «0» desactiva la regla es un "off". */

  "env": {
    "browser": true /* El objetivo del código es ejecutar en navegadores */
  },
  "parserOptions": {
    "ecmaVersion": 2018,  /* Establece la versión de ECMAScript que se usará */
    "sourceType": "module"  /* Indica si se usan módulos ESM o solo scripts */
  },
  "extends": ["eslint:recommended"], /* Reglas marcadas con ✓ en eslint.org/docs/rules/  */
  "rules": {
    "no-console": "warn", /* advierte que no deberias usar console */
    "import/extensions": "off", /* deshabilita la regla de import/extensions */
    "no-alert": "warn", /* advierte que no deberias usar alert */
    "prefer-const": ["error", {
      "destructuring": "any", /* si alguna variable debe ser constante , esta regla advierte sobre esas variables.*/
      "ignoreReadBeforeAssign": false
    }],
    "indent": ["error", 2], /* código esté indentado con tabuladores o con 2 espacios */
    "linebreak-style": ["error", "windows"], /* escribimos código en Windows o en Unix */
    "quotes": ["error", "single"],  /* utilizamos comillas simples para los strings */
    "semi": ["error", "always"], /* utilizar punto y coma al final de cada sentencia */
    "space-infix-ops": "error",  /* exige dejar espacios entre =, >, < */
    "camelcase": "error", /* exige usar camelCase */
    "no-trailing-spaces": ["error", { "skipBlankLines": false }] /* no permite dejar espacios en blanco en líneas */
  }
}
